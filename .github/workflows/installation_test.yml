---
name: Installation CI
on: # yamllint disable-line rule:truthy
  push:
    branches: [main]
    paths: [scripts/, .github/workflows/installation_test.yml]
  pull_request:
    paths: [scripts/, .github/workflows/installation_test.yml]
  workflow_dispatch:
  schedule:
    - cron: 23 11 * * *

concurrency:
  group: |
    ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  install_linux:
    name: Linux install
    strategy:
      fail-fast: false
      matrix:
        config:
          - { instance: ubuntu-latest, arch: x86-64 }
          - { instance: ubuntu-24.04-arm, arch: arm64 }
        install_method: [binary, source]
        neovim_version: [stable, nightly, v0.9.0, v0.11.0]
        exclude:
          - config:
              arch: arm64
            neovim_version: v0.9.0
          - config:
              arch: x86-64
            install_method: source
            neovim_version: v0.9.0
          - install_method: source
            neovim_version: v0.11.0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install build pre-requisites
        run: |
          sudo apt-get install -y ninja-build gettext \
          cmake unzip curl build-essential
      - name: Install Neovim
        shell: bash
        run: |-
          ./scripts/neovim_install.sh -v ${{ matrix.neovim_version }} \
          -d ~/.remote-nvim \
          -m ${{ matrix.install_method }} -a x86_64
          ~/.remote-nvim/nvim-downloads/${{ matrix.neovim_version }}/bin/nvim -v
  install_macos:
    name: MacOS install
    strategy:
      fail-fast: false
      matrix:
        config:
          - { instance: macos-13, arch: x86_64 }
          - { instance: macos-15, arch: arm64 }
        install_method: [binary, source]
        neovim_version: [stable, nightly, v0.9.0, v0.11.0]
        exclude:
          - install_method: source
            neovim_version: v0.9.0
          - install_method: source
            neovim_version: v0.11.0
    runs-on: ${{ matrix.config.instance }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Neovim
        shell: bash
        run: |-
          ./scripts/neovim_install.sh -v ${{ matrix.neovim_version }} \
          -d ~/.remote-nvim \
          -m ${{ matrix.install_method }} -a ${{ matrix.config.arch }}
          ~/.remote-nvim/nvim-downloads/${{ matrix.neovim_version }}/bin/nvim -v
  symlink_test:
    name: Symlink test
    strategy:
      fail-fast: false
      matrix:
        config:
          - { instance: ubuntu-latest, arch: x86-64 }
          - { instance: ubuntu-24.04-arm, arch: arm64 }
          - { instance: macos-13, arch: x86_64 }
          - { instance: macos-15, arch: arm64 }
        neovim_version: [stable, nightly, v0.9.0]
        exclude:
          - config:
              arch: arm64
              instance: ubuntu-24.04-arm
            neovim_version: v0.9.0
    runs-on: ${{ matrix.config.instance }}
    steps:
      - uses: actions/checkout@v4
      - uses: rhysd/action-setup-vim@v1
        name: Install Neovim
        with:
          neovim: true
          version: ${{ matrix.neovim_version }}
      - name: Symlink Neovim to system neovim install
        shell: bash
        run: |-
          ./scripts/neovim_install.sh -v system -d ~/.remote-nvim -m system \
           -a ${{ matrix.config.arch }}
          ~/.remote-nvim/nvim-downloads/system/bin/nvim -v
